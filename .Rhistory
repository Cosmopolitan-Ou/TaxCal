shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
income
bonus
benefit
deduct
null_vars <- c()
is.null(cal(income))
if (is.null(cal(income))) null_vars <- append("年度薪资总收入")
is.null(cal(bonus))
bonus
income
cal(income)
grepl
grepl("[^A-Za-z]", "sdf")
grepl("[^A-Za-z]", "123")
grepl("[^A-Za-z]", "12a3")
grepl("[A-Za-z]", "12a3")
grepl("[A-Za-z]", "123")
grepl("[A-Za-z]", "123+")
grepl("[A-Za-z]", "123+a")
grepl("[A-Za-z]", "123+adf")
runApp()
runApp()
runApp()
cal(income)
cal(bonus)
cal(benefit)
cal(deduct)
append("年度薪资总收入")
runApp()
runApp()
runApp()
msg
runApp()
runApp()
runApp()
runApp()
null_vars
length(null_vars)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
txt
grepl("[A-Za-z]", txt)
eval(parse(text=txt))
runApp()
runApp()
Inf
runApp()
runApp()
runApp()
income
bonus
benefit
deduct
val1
val2
resid <- c()
for (i in TAX_RANGE) {
resid <- append(resid, val1 - i)
}
resid
n
runApp()
resid
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
tax
resid
pre_amout
pre_amout - 144000
tax
TAX_RANGE[1] * TAX_RATE[1]
resid[1]
TAX_RANGE[2] * TAX_RATE[2]
runApp()
tax
1080 + 10800
i  = 1
TAX_RANGE[i] * (TAX_RATE[i] - ifelse(i==1, 0, TAX_RATE[i-1]))
i = 2
TAX_RANGE[i] * (TAX_RATE[i] - ifelse(i==1, 0, TAX_RATE[i-1]))
runApp()
tax
i = 1
(TAX_RANGE[i] -  ifelse(i==1, 0, TAX_RATE[i-1])) * (TAX_RATE[i])
i = 2
(TAX_RANGE[i] -  ifelse(i==1, 0, TAX_RATE[i-1])) * (TAX_RATE[i])
ifelse(i==1, 0, TAX_RATE[i-1])
runApp()
tax
runApp()
tax
runApp()
runApp()
runApp()
runApp()
vals
vals[1]
vals[2]
vals[3]
vals[4]
vals[5]
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
str(sdf)
str(123)
stirng(123)
char(123)
runApp()
runApp()
runApp()
runApp()
val1
val2
val3
val4
val5
tax
pre_amout
runApp()
runApp()
runApp()
runApp()
runApp()
tax
ifelse(pre_amout < 0, 0, pre_amout)
runApp()
tax
pre_amout
resid
i
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages('rsconnect')
install.packages("rsconnect")
rsconnect::setAccountInfo(name='jimou',
token='F58B65AF5313E38B286C9F59651DF687',
secret='<SECRET>')
rsconnect::setAccountInfo(name='jimou',
token='F58B65AF5313E38B286C9F59651DF687',
secret='')
rsconnect::setAccountInfo(name='jimou',
token='F58B65AF5313E38B286C9F59651DF687',
secret='Ib7FNwopqzFKF2Wv891WW0azXMReELLsECaf6OjH')
rsconnect::setAccountInfo(name='jimou',
token='F58B65AF5313E38B286C9F59651DF687',
secret='Ib7FNwopqzFKF2Wv891WW0azXMReELLsECaf6OjH')
shiny::runApp()
shiny::runApp()
rsconnect::setAccountInfo(name='jimou',
token='F58B65AF5313E38B286C9F59651DF687',
secret='Ib7FNwopqzFKF2Wv891WW0azXMReELLsECaf6OjH')
